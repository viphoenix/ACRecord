//
//  history.cpp
//  PAT-1085-PerfectSequence-25
//
//  Created by 程锋 on 15/9/6.
//  Copyright (c) 2015年 程锋. All rights reserved.
//

/**
 *  二分查找最终的位置就是元素所在的位置，无论元素是否存在
 */

#include <iostream>
#include <cstdlib>
#define N 100005

long int a[N];
int n, p;

int cmp(const void * a, const void * b)
{
    long int * ta = (long int *)a;
    long int * tb = (long int *)b;
    
    return (int)((*ta) - (*tb));
}

int binarySearch(long int result)
{
    int low = 0;
    int high = n-1;
    
    while(low <= high)
    {
        int mid = (low+high)/2;
        if(a[mid] > result)
            high = mid - 1;
        else if(a[mid] < result)
            low = mid + 1;
        else
            return mid;
    }
    
    return low;
}

int main(int argc, const char * argv[]) {
    
    freopen("/Users/chengfeng/Dev/Algorithm/PAT甲级/PAT-1085-PerfectSequence-25/PAT-1085-PerfectSequence-25/in", "r", stdin);
    
    while(scanf("%d%d", &n, &p) != EOF)
    {
        for(int i = 0; i < n; ++i)
            scanf("%ld", &a[i]);
        
        qsort(a, n, sizeof(long int), cmp);
        
        
        for(int i = 0; i < n; ++i)
            printf("%ld ", a[i]);
        printf("\n");
        
        
        int max = 0;
        
        
        for(int i = 0; i < n; ++i)
        {
            long int result = a[i] * p;
            int len;
            
            if(a[n-1] <= result)
                len = n-1-i+1;
            else
                len = binarySearch(result) - i;
            
            if(len > max)
                max = len;
            
        }
        
        printf("%d\n", max);
        
        printf("%d", binarySearch(16));
    }
    
    return 0;
}
